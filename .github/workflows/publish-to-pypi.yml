name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: python -m twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Install package
      run: |
        pip install dist/*.whl
    
    - name: Test installation
      run: |
        testrules --help
        python -c "import testrules; print('Package imported successfully')"
    
    - name: Run package tests
      run: |
        pip install coverage flake8
        # Test the package with some basic functionality
        testrules --version

  publish-testpypi:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'testpypi'
    environment: testpypi
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: (github.event_name == 'release' && github.event.action == 'published') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'pypi')
    environment: pypi
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  create-github-release:
    runs-on: ubuntu-latest
    needs: [publish-pypi]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'pypi'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: get_version
      run: |
        VERSION=$(python -c "from testrules import __version__; print(__version__)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        body: |
          ## Changes in this Release
          
          - Published lightweight-test-runner v${{ steps.get_version.outputs.version }} to PyPI
          - Available for installation: `pip install lightweight-test-runner`
          
          ## Installation
          
          ```bash
          pip install lightweight-test-runner
          ```
          
          ## Usage
          
          ```bash
          testrules --help
          testrules --all
          testrules unit
          ```
          
          See the [README](README.md) for full documentation.
        draft: false
        prerelease: false